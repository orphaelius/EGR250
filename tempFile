#include <stdio.h>
#include <string.h>
#define GRADES 4
#define STUDENTS 3

// Good practice to initialize these arrays in main() but not necessary...
typedef struct { // TWO QUESTIONS-- SINCE NOTHING IS INITIALIZED, WHAT DATA IS STORED HERE? 
	char name[40];
	int grades[4]; // Have an array of numbers as a field/member
	float average;
} Student;

void getStudent(Student*);
void displayStudent(Student); // Pass by value (sends a copy!)
void getAllStudents(Student allStudents[]); 
void displayAllStudents(Student allStudents[]);

void searchByName(Student allStudents[]);


int main() {
	Student s1;
	
	// Define an ARRAY of structures. 
	Student allStudents[3];
	//getStudent(&s1);
	//displayStudent(s1);

	getAllStudents(allStudents);  
	displayAllStudents(allStudents);

	return 0;
} // End main()



void getStudent(Student* stu_ptr) {
	float sum = 0.0;

	printf("enter student name: ");
	fgets(stu_ptr->name, 40, stdin);
	stu_ptr->name[strlen(stu_ptr->name) - 1] = '\0'; // REFACTOR THIS FOR ASSIGNMENTS
	//add code to enter grades
	for (size_t i = 0; i < GRADES; ++i) {
		printf("Enter student grade #%zu: ", (i + 1)); 
		scanf("%d", &stu_ptr->grades[i]);
		sum += stu_ptr->grades[i];
	}

	

	// Compute average
	stu_ptr->average = sum / GRADES;
	//printf("Student average is: %f\n", stu_ptr->average);

} // End getStudent()

void displayStudent(Student student) {
	printf("student name: %s\n", student.name);
	for (size_t i = 0; i < GRADES; ++i) {
		printf("Student grade #%zu: %d\n", (i + 1), student.grades[i]);		 
	}
	printf("Average grade is %.2f\n", student.average); 
	//add code to display grades
} // End displayStudent()

void getAllStudents(Student allStudents[]) {
	FILE* infile = fopen("students.txt", "r");
	float sum = 0.0;

	if (infile == NULL) {
		printf("These are not the drones you are looking for...\n");
	}

	for (size_t i = 0; i < STUDENTS; ++i) {
		float sum = 0.0;
		// fgets(allStudents[i].name, allStudents[i].name[strlen(allStudents[i].name) - 1], infile);
		fgets(allStudents[i].name, 40, infile);
		allStudents[i].name[strlen(allStudents[i].name) - 1] = '\0';	
		for (size_t j = 0; j < GRADES; ++j) {
			fscanf(infile, "%d\n", &allStudents[i].grades[j]);
			sum += allStudents[i].grades[j];
		}		
		while (getchar() != '\n');
		allStudents[i].average = sum / GRADES;  
	}

	fclose(infile);
}

void displayAllStudents(Student allStudents[]) {
	
	for (size_t i = 0; i < STUDENTS; ++i) {
		printf("Student name %s\n", allStudents[i].name);
		for (size_t j = 0; j < GRADES; ++j) {
			printf("Student grade #%zu: %d\n", (j + 1), allStudents[i].grades[j]);

		}
		printf("Average grade is %.2f\n", allStudents[i].average);
	}
	
	//add code to display grades

	
} // End displayStudent()

void searchByName(Student allStudents[]) {
	char searchName[40];
	int found = 0;
	char* foundString;

	printf("Enter a name to search: ");
	fgets(searchName, sizeof(searchName), stdin);
	searchName[strlen(searchName) - 1] = '\0';

	// don't use strstr for EXACT MATCH!!
	// use strcmp!!! returns 0 if exact match
	for (size_t i = 0; i < STUDENTS; ++i) {
		if (strcmp(allStudents[i].name, searchName) == 0) {
			found = 1;
			displayStudent(allStudents[i]);
		}
	}



}

