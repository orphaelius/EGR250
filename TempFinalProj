

#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define COMPANIES 10
#define STATECHAR 5
#define CITYCHAR 25
#define NAMEMAX 30
#define SYMBCHAR 6

typedef struct {
	char city[CITYCHAR];
	char state[STATECHAR];
} LOCATION;

typedef struct {
	char name[NAMEMAX];
	int totalComp;
} CEO;

typedef struct {
	char stockName[NAMEMAX];
	char stockSym[SYMBCHAR];
	char stockChange[NAMEMAX];
	int numShares;
	LOCATION location;
	CEO CEO;
} STOCK;

void readStockData(STOCK allStockData[]);
void displayData(STOCK allStockData[]);
void displayComma(int n);
void displayCEOinfo(STOCK allStockData[]);
void searchStockBySymbol(STOCK allStockData[]);
void searchPortionStockName(STOCK allStockData[]);
void displayHigherPrice(STOCK allStockData[]);
void displayLowerPrice(STOCK allStockData[]);
void displayIncreaseDecrease(STOCK allStockData[]);
void displayPortfolio(STOCK allStockData[]);
void searchByLocation(STOCK allStockData[]);

int main(void) {
	STOCK allStockData[COMPANIES];

	readStockData(allStockData); 
	searchStockBySymbol(allStockData);
	searchPortionStockName(allStockData);
	//displayData(allStockData);

}

void readStockData(STOCK allStockData[]) {
	FILE* infile = fopen("stockdataFINAL.txt", "r"); 
	char endOfLine[10];
	char tempStockChange[2];

	for (size_t i = 0; i < COMPANIES; ++i) {
		printf("COMPANY %zu\n", i + 1);
		// Get city name, null terminate
		fgets(allStockData[i].location.city, CITYCHAR, infile);
		allStockData[i].location.city[strlen(allStockData[i].location.city) - 1] = '\0';
		printf("city: %s\n", allStockData[i].location.city);

		// Get state abbreviation, null terminate
		fgets(allStockData[i].location.state, STATECHAR, infile);
		allStockData[i].location.state[strlen(allStockData[i].location.state) - 1] = '\0';
		printf("state: %s\n", allStockData[i].location.state);

		// Get CEO name, null terminate
		fgets(allStockData[i].CEO.name, NAMEMAX, infile);
		allStockData[i].CEO.name[strlen(allStockData[i].CEO.name) - 1] = '\0';
		printf("CEO: %s\n", allStockData[i].CEO.name);

		// Scan totalComp
		fscanf(infile, "%d", &allStockData[i].CEO.totalComp);
		fgets(endOfLine, 10, infile);
		printf("total comp: %d\n", allStockData[i].CEO.totalComp);

		// Get stock name, null terminate
		fgets(allStockData[i].stockName, NAMEMAX, infile);
		allStockData[i].stockName[strlen(allStockData[i].stockName) - 1] = '\0';
		printf("stock name: %s\n", allStockData[i].stockName);

		// Get stock abbreviation, null terminate
		fgets(allStockData[i].stockSym, SYMBCHAR, infile);
		allStockData[i].stockSym[strlen(allStockData[i].stockSym) - 1] = '\0';
		printf("stock abbreviation: %s\n", allStockData[i].stockSym);
		
		/*
		// Hopefully get stockChanges idk man
		char* token = strtok(allStockData[i].stockChange, ","); 
		int j = 0;
		int tempLen = 0;
		while (token != NULL && j < 2) {			
			token[strlen(token) - 1] = '\0';

			printf("current token: %s\n", token);
			allStockData[i].stockChange[j] = token[j];
			allStockData[i].stockChange[j] = token[j];
			printf("j is now %d\n", j);
			j++;			
			token = strtok(NULL, ",");		
		}*/

		fgets(allStockData[i].stockChange, NAMEMAX, infile);
		allStockData[i].stockChange[strlen(allStockData[i].stockChange) - 1] = '\0';
		printf("stock changes: %s\n", allStockData[i].stockChange); 

		// Get number shares
		fscanf(infile, "%d", &allStockData[i].numShares);
		printf("number shares: %d\n", allStockData[i].numShares);

		fgets(endOfLine, 10, infile);		
	}
}

// TEMP display data function. improve formatting, add commas/symbols etc
void displayData(STOCK allStockData[]) {
	for (size_t i = 0; i < COMPANIES; ++i) {
		printf("COMPANY %zu DATA\n", i + 1);
		printf("city: %s\n", allStockData[i].location.city);
		printf("state: %s\n", allStockData[i].location.state);
		printf("CEO: %s\n", allStockData[i].CEO.name);
		printf("total comp: %d\n", allStockData[i].CEO.totalComp);
		printf("stock name: %s\n", allStockData[i].stockName);
		printf("stock abbreviation: %s\n", allStockData[i].stockSym);
		printf("stock changes: %c, %c \n", allStockData[i].stockChange[0], allStockData[i].stockChange[1]);
		printf("number shares: %d\n", allStockData[i].numShares);
		puts("");
	}
}

void displayCEOinfo(STOCK allStockData[]) {
	// print stock name, ceo name, city, and state
}


// need to add print all info relaetd to that stock!
void searchStockBySymbol(STOCK allStockData[]) {
	char inputSymbol[SYMBCHAR] = { "" };
	char* search;
	int found = 0;
	printf("Enter the stock symbol: ");
	fgets(inputSymbol, SYMBCHAR, stdin);
	inputSymbol[strlen(inputSymbol) - 1] = '\0';

	for (size_t i = 0; i < strlen(inputSymbol); ++i) {
		inputSymbol[i] = toupper(inputSymbol[i]);
	}

	printf("You entered: %s\n", inputSymbol);
	printf("Searching...\n");

	for (size_t i = 0; i < COMPANIES; ++i) {
		search = strstr(allStockData[i].stockSym, inputSymbol);

		if (search) {
			printf("Match found! %s\n", allStockData[i].stockSym);
			found = 1;
		}
	}

	if (!found) {
		printf("No stock symbol matches %s\n", inputSymbol);
	}
}

// ADD FORMATTING TO DISPLAY ALL STOCK INFO IF FOUND
void searchPortionStockName(STOCK allStockData[]) {
	char endLine[10];
	fgets(endLine, 10, stdin);

	char inputSymbol[SYMBCHAR] = { "" };
	char* search;
	int found = 0;
	printf("Enter any portion of a company name to search: ");
	fgets(inputSymbol, NAMEMAX, stdin);
	inputSymbol[strlen(inputSymbol) - 1] = '\0';
	
	printf("You entered: %s\n", inputSymbol);
	printf("Searching...\n");

	

	for (size_t i = 0; i < COMPANIES; ++i) {
		search = strstr(allStockData[i].stockName, inputSymbol); 

		if (search) {
			printf("Company found! %s\n", allStockData[i].stockName);
			found = 1;
		}
	}

	if (!found) {
		printf("No company matches %s\n", inputSymbol);
	}
}

// use current price per share, display all stocks by name that are higher
void displayHigherPrice(STOCK allStockData[]) {
	printf("Enter a stock value and I will return all stocks with a higher value: ");
	scanf("%d");
}

// use last price per share, display all stocks by name that are lower than the first price
void displayHigherPrice(STOCK allStockData[]) {
	printf("Enter a stock value and I will return all stocks with a higher value: ");
	scanf("%d");
}

// dsplay stock symbols and price increase or decrease by percentage
// formula is (now - then) / then
void displayIncreaseDecrease(STOCK allStockData[]) {



}

// displays all stocks, their inividual shares, and the total sum of all shares * price now
void displayPortfolio(STOCK allStockData[]) {

}

void searchByLocation(STOCK allStockData[]) {
	char endLine[10];
	fgets(endLine, 10, stdin);

	char inputSymbol[SYMBCHAR] = { "" };
	char* search;
	int found = 0;
	printf("Enter any portion of city or state to search for companies in those jurisdictions: ");
	fgets(inputSymbol, NAMEMAX, stdin);
	inputSymbol[strlen(inputSymbol) - 1] = '\0';

	printf("You entered: %s\n", inputSymbol);
	printf("Searching...\n");

	for (size_t i = 0; i < COMPANIES; ++i) {
		search = strstr(allStockData[i].location.city, inputSymbol);

		if (search) {
			printf("Company found! %s\n", allStockData[i].location.city);
			found = 1;
		}
		search = strstr(allStockData[i].location.state, inputSymbol);
		if (search) {
			printf("Company found! %s\n", allStockData[i].location.state);
			found = 1;
		}
	}

	if (!found) {
		printf("No company matches %s\n", inputSymbol);
	}

}










// little recursive comma action
void displayComma(int n) {
	if (n < 1000) {
		printf("%d", n);
		return;
	}
	displayComma(n / 1000);
	printf(",%03d", n % 1000);
}
